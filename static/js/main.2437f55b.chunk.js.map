{"version":3,"sources":["components/Example.js","components/SecondExample.js","components/App.js","serviceWorker.js","index.js"],"names":["Banner","props","newProp","console","log","contentPosition","totalItems","length","mediaLength","items","content","Grid","item","xs","key","CardContent","className","Typography","Name","Caption","Button","variant","i","Items","media","CardMedia","image","Image","title","push","unshift","splice","Card","raised","container","spacing","BannerExample","state","autoPlay","timer","animation","indicators","autoBind","this","setState","event","target","value","style","marginTop","color","map","index","FormLabel","component","FormControlLabel","control","Checkbox","onChange","toggleAutoPlay","checked","label","toggleIndicators","RadioGroup","name","changeAnimation","row","marginLeft","Radio","React","Component","Project","Paper","backgroundColor","elevation","description","MyProjectsExample","App","padding","marginBottom","href","textDecoration","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"qfAOA,SAASA,EAAOC,GAERA,EAAMC,SAASC,QAAQC,IAAIH,EAAMC,SAyBrC,IAxBA,IAAMG,EAAkBJ,EAAMI,gBAAkBJ,EAAMI,gBAAkB,OAClEC,EAAaL,EAAMM,OAASN,EAAMM,OAAS,EAC3CC,EAAcF,EAAa,EAE7BG,EAAQ,GACNC,EACF,kBAACC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAKP,EAAYQ,IAAI,WAChC,kBAACC,EAAA,EAAD,CAAaC,UAAU,WACnB,kBAACC,EAAA,EAAD,CAAYD,UAAU,SACjBf,EAAMW,KAAKM,MAGhB,kBAACD,EAAA,EAAD,CAAYD,UAAU,WACjBf,EAAMW,KAAKO,SAGhB,kBAACC,EAAA,EAAD,CAAQC,QAAQ,WAAWL,UAAU,cAArC,cAQHM,EAAI,EAAGA,EAAId,EAAac,IACjC,CACI,IAAMV,EAAOX,EAAMW,KAAKW,MAAMD,GAExBE,EACF,kBAACb,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAKP,EAAYQ,IAAKF,EAAKM,MAElC,kBAACO,EAAA,EAAD,CACIT,UAAU,QACVU,MAAOd,EAAKe,MACZC,MAAOhB,EAAKM,MAEZ,kBAACD,EAAA,EAAD,CAAYD,UAAU,gBACjBJ,EAAKM,QAQ1BT,EAAMoB,KAAKL,GAgBf,MAbwB,SAApBnB,EAEAI,EAAMqB,QAAQpB,GAEW,UAApBL,EAELI,EAAMoB,KAAKnB,GAEc,WAApBL,GAELI,EAAMsB,OAAOtB,EAAMF,OAAS,EAAG,EAAGG,GAIlC,kBAACsB,EAAA,EAAD,CAAMC,QAAM,EAACjB,UAAU,UACnB,kBAACL,EAAA,EAAD,CAAMuB,WAAS,EAACC,QAAS,EAAGnB,UAAU,cACjCP,IAMjB,IAAMA,EAAQ,CACZ,CACIS,KAAM,cACNC,QAAS,0BACTd,gBAAiB,OACjBkB,MAAO,CACH,CACIL,KAAM,cACNS,MAAO,iDAEX,CACIT,KAAM,SACNS,MAAO,kDAInB,CACIT,KAAM,kBACNC,QAAS,gCACTd,gBAAiB,SACjBkB,MAAO,CACH,CACIL,KAAM,yBACNS,MAAO,wDAEX,CACIT,KAAM,wBACNS,MAAO,0DAInB,CACIT,KAAM,cACNC,QAAS,4CACTd,gBAAiB,QACjBkB,MAAO,CACH,CACIL,KAAM,mBACNS,MAAO,8CAEX,CACIT,KAAM,cACNS,MAAO,iDA+FNS,E,YAvFX,WAAYnC,GACX,IAAD,8BACI,4CAAMA,KAEDoC,MAAQ,CACTC,UAAU,EACVC,MAAO,IACPC,UAAW,OACXC,YAAY,GAGhBC,IAAS,gBAVb,E,8EAeIC,KAAKC,SAAS,CACVN,UAAWK,KAAKN,MAAMC,a,yCAM1BK,KAAKC,SAAS,CACVH,YAAaE,KAAKN,MAAMI,e,sCAIhBI,GAEZF,KAAKC,SAAS,CACVJ,UAAWK,EAAMC,OAAOC,U,+BAM5B,OACI,yBAAKC,MAAO,CAACC,UAAW,OAAQC,MAAO,YACnC,yDAEA,kBAAC,IAAD,CACIlC,UAAU,UACVsB,SAAUK,KAAKN,MAAMC,SACrBC,MAAOI,KAAKN,MAAME,MAClBC,UAAWG,KAAKN,MAAMG,UACtBC,WAAYE,KAAKN,MAAMI,YAGnBhC,EAAM0C,KAAK,SAACvC,EAAMwC,GACd,OAAO,kBAACpD,EAAD,CAAQY,KAAMA,EAAME,IAAKsC,EAAO/C,gBAAiBO,EAAKP,sBAMzE,kBAACgD,EAAA,EAAD,CAAWC,UAAU,UAArB,WACA,kBAACC,EAAA,EAAD,CACIC,QACI,kBAACC,EAAA,EAAD,CAAUC,SAAUf,KAAKgB,eAAgBC,QAASjB,KAAKN,MAAMC,SAAUS,MAAM,WAAWG,MAAM,YAElGW,MAAM,cAEV,kBAACN,EAAA,EAAD,CACIC,QACI,kBAACC,EAAA,EAAD,CAAUC,SAAUf,KAAKmB,iBAAkBF,QAASjB,KAAKN,MAAMI,WAAYM,MAAM,aAAaG,MAAM,YAExGW,MAAM,eAKV,kBAACN,EAAA,EAAD,CACIC,QACI,kBAACO,EAAA,EAAD,CAAYC,KAAK,YAAYjB,MAAOJ,KAAKN,MAAMG,UAAWkB,SAAUf,KAAKsB,gBAAiBC,KAAG,EAAClB,MAAO,CAACmB,WAAY,SAC9G,kBAACZ,EAAA,EAAD,CAAkBR,MAAM,OAAOS,QAAS,kBAACY,EAAA,EAAD,CAAOlB,MAAM,YAAaW,MAAM,SACxE,kBAACN,EAAA,EAAD,CAAkBR,MAAM,QAAQS,QAAS,kBAACY,EAAA,EAAD,CAAOlB,MAAM,YAAaW,MAAM,kB,GA9EzEQ,IAAMC,W,gBCjHlC,SAASC,EAAQtE,GAEb,OACI,kBAACuE,EAAA,EAAD,CACIxD,UAAU,UACVgC,MAAO,CACHyB,gBAAiBxE,EAAMW,KAAKsC,OAEhCwB,UAAW,IAEX,4BAAKzE,EAAMW,KAAKoD,MAChB,2BAAI/D,EAAMW,KAAK+D,aAEf,kBAACvD,EAAA,EAAD,CAAQJ,UAAU,eAAlB,kBAOZ,IAAMP,EAAQ,CACV,CACIuD,KAAM,oBACNW,YAAa,iDACbzB,MAAO,WAEX,CACIc,KAAM,iBACNW,YAAa,iEACbzB,MAAO,WAEX,CACIc,KAAM,SACNW,YAAa,wDACbzB,MAAO,WAEX,CACIc,KAAM,iBACNW,YAAa,+DACbzB,MAAO,YAIM0B,E,YAEjB,WAAY3E,GACX,IAAD,8BACI,4CAAMA,KAEDoC,MAAQ,CACTC,UAAU,EACVC,MAAO,IACPC,UAAW,OACXC,YAAY,GAGhBC,IAAS,gBAVb,E,8EAeIC,KAAKC,SAAS,CACVN,UAAWK,KAAKN,MAAMC,a,yCAM1BK,KAAKC,SAAS,CACVH,YAAaE,KAAKN,MAAMI,e,sCAIhBI,GAEZF,KAAKC,SAAS,CACVJ,UAAWK,EAAMC,OAAOC,U,+BAM5B,OACI,yBAAKC,MAAO,CAACC,UAAW,OAAQC,MAAO,YACnC,iEAEA,kBAAC,IAAD,CACIlC,UAAU,gBACVsB,SAAUK,KAAKN,MAAMC,SACrBC,MAAOI,KAAKN,MAAME,MAClBC,UAAWG,KAAKN,MAAMG,UACtBC,WAAYE,KAAKN,MAAMI,YAGnBhC,EAAM0C,KAAK,SAACvC,EAAMwC,GACd,OAAO,kBAACmB,EAAD,CAAS3D,KAAMA,EAAME,IAAKsC,QAM7C,kBAACC,EAAA,EAAD,CAAWC,UAAU,UAArB,WACA,kBAACC,EAAA,EAAD,CACIC,QACI,kBAACC,EAAA,EAAD,CAAUC,SAAUf,KAAKgB,eAAgBC,QAASjB,KAAKN,MAAMC,SAAUS,MAAM,WAAWG,MAAM,YAElGW,MAAM,cAEV,kBAACN,EAAA,EAAD,CACIC,QACI,kBAACC,EAAA,EAAD,CAAUC,SAAUf,KAAKmB,iBAAkBF,QAASjB,KAAKN,MAAMI,WAAYM,MAAM,aAAaG,MAAM,YAExGW,MAAM,eAKV,kBAACN,EAAA,EAAD,CACIC,QACI,kBAACO,EAAA,EAAD,CAAYC,KAAK,YAAYjB,MAAOJ,KAAKN,MAAMG,UAAWkB,SAAUf,KAAKsB,gBAAiBC,KAAG,EAAClB,MAAO,CAACmB,WAAY,SAC9G,kBAACZ,EAAA,EAAD,CAAkBR,MAAM,OAAOS,QAAS,kBAACY,EAAA,EAAD,CAAOlB,MAAM,YAAaW,MAAM,SACxE,kBAACN,EAAA,EAAD,CAAkBR,MAAM,QAAQS,QAAS,kBAACY,EAAA,EAAD,CAAOlB,MAAM,YAAaW,MAAM,kB,GA9EtDQ,IAAMC,WCzCtCO,EAbH,kBACR,yBAAK7B,MAAO,CAAC8B,QAAS,aAAcL,gBAAiB,YACjD,wBAAIzB,MAAO,CAACE,MAAO,YAAnB,mCACA,uBAAGF,MAAO,CAAC+B,aAAc,SAAzB,MACO,uBAAGC,KAAK,0BAA0BhC,MAAO,CAACiC,eAAgB,OAAQ/B,MAAO,mBAAzE,UAAsG,6BACzG,uBAAG8B,KAAK,2DAA2DhC,MAAO,CAACiC,eAAgB,OAAQ/B,MAAO,mBAA1G,gBAGJ,kBAAC,EAAD,MACA,kBAAC,EAAD,QCDYgC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.2437f55b.chunk.js","sourcesContent":["import React from 'react';\r\nimport Carousel from \"react-material-ui-carousel\"\r\nimport autoBind from \"auto-bind\"\r\nimport '../style//Example.scss';\r\n\r\nimport { Card, CardContent, CardMedia, Typography, Grid, Button, Checkbox, FormControlLabel, Radio, RadioGroup, FormLabel } from '@material-ui/core';\r\n\r\nfunction Banner(props)\r\n{\r\n    if (props.newProp) console.log(props.newProp)\r\n    const contentPosition = props.contentPosition ? props.contentPosition : \"left\"\r\n    const totalItems = props.length ? props.length : 3;\r\n    const mediaLength = totalItems - 1;\r\n\r\n    let items = [];\r\n    const content = (\r\n        <Grid item xs={12 / totalItems} key=\"content\">\r\n            <CardContent className=\"Content\">\r\n                <Typography className=\"Title\">\r\n                    {props.item.Name}\r\n                </Typography>\r\n\r\n                <Typography className=\"Caption\">\r\n                    {props.item.Caption}\r\n                </Typography>\r\n\r\n                <Button variant=\"outlined\" className=\"ViewButton\">\r\n                    View Now\r\n                </Button>\r\n            </CardContent>\r\n        </Grid>\r\n    )\r\n\r\n    \r\n    for (let i = 0; i < mediaLength; i++)\r\n    {\r\n        const item = props.item.Items[i];\r\n\r\n        const media = (\r\n            <Grid item xs={12 / totalItems} key={item.Name}>\r\n                {/* <Link href={`/item/${item.Id}`} className=\"Link\"> */}\r\n                    <CardMedia\r\n                        className=\"Media\"\r\n                        image={item.Image}\r\n                        title={item.Name}\r\n                    >\r\n                        <Typography className=\"MediaCaption\">\r\n                            {item.Name}\r\n                        </Typography>\r\n                    </CardMedia>\r\n                {/* </Link> */}\r\n                \r\n            </Grid>\r\n        )\r\n\r\n        items.push(media);\r\n    }\r\n\r\n    if (contentPosition === \"left\")\r\n    {\r\n        items.unshift(content);\r\n    }\r\n    else if (contentPosition === \"right\")\r\n    {\r\n        items.push(content);\r\n    }\r\n    else if (contentPosition === \"middle\")\r\n    {\r\n        items.splice(items.length / 2, 0, content);\r\n    }\r\n\r\n    return (\r\n        <Card raised className=\"Banner\">\r\n            <Grid container spacing={0} className=\"BannerGrid\">\r\n                {items}\r\n            </Grid>\r\n        </Card>\r\n    )\r\n}\r\n\r\nconst items = [\r\n  {\r\n      Name: \"Electronics\",\r\n      Caption: \"Electrify your friends!\",\r\n      contentPosition: \"left\",\r\n      Items: [\r\n          {\r\n              Name: \"Macbook Pro\",\r\n              Image: \"https://source.unsplash.com/featured/?macbook\"\r\n          },\r\n          {\r\n              Name: \"iPhone\",\r\n              Image: \"https://source.unsplash.com/featured/?iphone\"\r\n          }\r\n      ]\r\n  },\r\n  {\r\n      Name: \"Home Appliances\",\r\n      Caption: \"Say no to manual home labour!\",\r\n      contentPosition: \"middle\",\r\n      Items: [\r\n          {\r\n              Name: \"Washing Machine WX9102\",\r\n              Image: \"https://source.unsplash.com/featured/?washingmachine\"\r\n          },\r\n          {\r\n              Name: \"Learus Vacuum Cleaner\",\r\n              Image: \"https://source.unsplash.com/featured/?vacuum,cleaner\"\r\n          }\r\n      ]\r\n  },\r\n  {\r\n      Name: \"Decoratives\",\r\n      Caption: \"Give style and color to your living room!\",\r\n      contentPosition: \"right\",\r\n      Items: [\r\n          {\r\n              Name: \"Living Room Lamp\",\r\n              Image: \"https://source.unsplash.com/featured/?lamp\"\r\n          },\r\n          {\r\n              Name: \"Floral Vase\",\r\n              Image: \"https://source.unsplash.com/featured/?vase\"\r\n          }\r\n      ]\r\n  }\r\n]\r\n\r\nclass BannerExample extends React.Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n\r\n        this.state = {\r\n            autoPlay: true,\r\n            timer: 500,\r\n            animation: \"fade\",\r\n            indicators: true\r\n        }\r\n\r\n        autoBind(this);\r\n    }\r\n\r\n    toggleAutoPlay()\r\n    {\r\n        this.setState({\r\n            autoPlay: !this.state.autoPlay\r\n        })\r\n    }\r\n\r\n    toggleIndicators()\r\n    {\r\n        this.setState({\r\n            indicators: !this.state.indicators\r\n        })\r\n    }\r\n\r\n    changeAnimation(event)\r\n    {\r\n        this.setState({\r\n            animation: event.target.value\r\n        })\r\n    }\r\n\r\n    render()\r\n    {\r\n        return (\r\n            <div style={{marginTop: \"50px\", color: \"#494949\"}}>\r\n                <h2>Example: eBay&trade; style</h2>\r\n\r\n                <Carousel \r\n                    className=\"Example\"\r\n                    autoPlay={this.state.autoPlay}\r\n                    timer={this.state.timer}\r\n                    animation={this.state.animation}\r\n                    indicators={this.state.indicators}\r\n                >\r\n                    {\r\n                        items.map( (item, index) => {\r\n                            return <Banner item={item} key={index} contentPosition={item.contentPosition}/>\r\n                        })\r\n                    }\r\n                </Carousel>\r\n\r\n\r\n                <FormLabel component=\"legend\">Options</FormLabel>\r\n                <FormControlLabel\r\n                    control={\r\n                        <Checkbox onChange={this.toggleAutoPlay} checked={this.state.autoPlay} value=\"autoplay\" color=\"primary\"/>\r\n                    }\r\n                    label=\"Auto-play\"\r\n                />\r\n                <FormControlLabel\r\n                    control={\r\n                        <Checkbox onChange={this.toggleIndicators} checked={this.state.indicators} value=\"indicators\" color=\"primary\"/>\r\n                    }\r\n                    label=\"Indicators\"\r\n                />\r\n\r\n                \r\n                {/* <FormLabel component=\"legend\">Animation</FormLabel> */}\r\n                <FormControlLabel\r\n                    control={\r\n                        <RadioGroup name=\"animation\" value={this.state.animation} onChange={this.changeAnimation} row style={{marginLeft: \"10px\"}}>\r\n                            <FormControlLabel value=\"fade\" control={<Radio color=\"primary\"/>} label=\"Fade\"/>\r\n                            <FormControlLabel value=\"slide\" control={<Radio color=\"primary\"/>} label=\"Slide\"/>\r\n                        </RadioGroup>\r\n                    }\r\n                />\r\n                \r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default BannerExample;\r\n","import React from 'react';\r\nimport Carousel from 'react-material-ui-carousel';\r\nimport autoBind from 'auto-bind';\r\nimport {\r\n    FormLabel,\r\n    FormControlLabel,\r\n    Checkbox,\r\n    Radio,\r\n    RadioGroup,\r\n    Paper,\r\n    Button\r\n} from '@material-ui/core'\r\n\r\nimport \"../style/SecondExample.scss\"\r\n\r\nfunction Project(props)\r\n{\r\n    return (\r\n        <Paper \r\n            className=\"Project\"\r\n            style={{\r\n                backgroundColor: props.item.color, \r\n            }}\r\n            elevation={10}\r\n        >\r\n            <h2>{props.item.name}</h2>\r\n            <p>{props.item.description}</p>\r\n\r\n            <Button className=\"CheckButton\">\r\n                Check it out!\r\n            </Button>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nconst items = [\r\n    {\r\n        name: \"Lear Music Reader\",\r\n        description: \"A PDF Reader specially designed for musicians.\",\r\n        color: \"#64ACC8\"\r\n    },\r\n    {\r\n        name: \"Hash Code 2019\",\r\n        description: \"My Solution on the 2019 Hash Code by Google Slideshow problem.\",\r\n        color: \"#7D85B1\"\r\n    },\r\n    {\r\n        name: \"Terrio\",\r\n        description: \"A exciting mobile game game made in the Unity Engine.\",\r\n        color: \"#CE7E78\"\r\n    },\r\n    {\r\n        name: \"React Carousel\",\r\n        description: \"A Generic carousel UI component for React using material ui.\",\r\n        color: \"#C9A27E\"\r\n    }\r\n]\r\n\r\nexport default class MyProjectsExample extends React.Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n\r\n        this.state = {\r\n            autoPlay: true,\r\n            timer: 500,\r\n            animation: \"fade\",\r\n            indicators: true\r\n        }\r\n\r\n        autoBind(this);\r\n    }\r\n\r\n    toggleAutoPlay()\r\n    {\r\n        this.setState({\r\n            autoPlay: !this.state.autoPlay\r\n        })\r\n    }\r\n\r\n    toggleIndicators()\r\n    {\r\n        this.setState({\r\n            indicators: !this.state.indicators\r\n        })\r\n    }\r\n\r\n    changeAnimation(event)\r\n    {\r\n        this.setState({\r\n            animation: event.target.value\r\n        })\r\n    }\r\n\r\n    render()\r\n    {\r\n        return (\r\n            <div style={{marginTop: \"50px\", color: \"#494949\"}}>\r\n                <h2>Example: Learus Projects (random)</h2>\r\n\r\n                <Carousel \r\n                    className=\"SecondExample\"\r\n                    autoPlay={this.state.autoPlay}\r\n                    timer={this.state.timer}\r\n                    animation={this.state.animation}\r\n                    indicators={this.state.indicators}\r\n                >\r\n                    {\r\n                        items.map( (item, index) => {\r\n                            return <Project item={item} key={index}/>\r\n                        })\r\n                    }\r\n                </Carousel>\r\n\r\n\r\n                <FormLabel component=\"legend\">Options</FormLabel>\r\n                <FormControlLabel\r\n                    control={\r\n                        <Checkbox onChange={this.toggleAutoPlay} checked={this.state.autoPlay} value=\"autoplay\" color=\"primary\"/>\r\n                    }\r\n                    label=\"Auto-play\"\r\n                />\r\n                <FormControlLabel\r\n                    control={\r\n                        <Checkbox onChange={this.toggleIndicators} checked={this.state.indicators} value=\"indicators\" color=\"primary\"/>\r\n                    }\r\n                    label=\"Indicators\"\r\n                />\r\n\r\n                \r\n                {/* <FormLabel component=\"legend\">Animation</FormLabel> */}\r\n                <FormControlLabel\r\n                    control={\r\n                        <RadioGroup name=\"animation\" value={this.state.animation} onChange={this.changeAnimation} row style={{marginLeft: \"10px\"}}>\r\n                            <FormControlLabel value=\"fade\" control={<Radio color=\"primary\"/>} label=\"Fade\"/>\r\n                            <FormControlLabel value=\"slide\" control={<Radio color=\"primary\"/>} label=\"Slide\"/>\r\n                        </RadioGroup>\r\n                    }\r\n                />\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport Example from './Example'\r\nimport SecondExample from './SecondExample'\r\n\r\nconst App = () => (\r\n    <div style={{padding: \"40px 100px\", backgroundColor: \"#ebebeb\"}}>\r\n        <h1 style={{color: \"#494949\"}}>React Material UI Carousel Demo</h1>\r\n        <p style={{marginBottom: \"30px\"}}>\r\n            by <a href=\"http://learus.github.io\" style={{textDecoration: \"none\", color: \"cornflowerblue\"}}>Learus</a><br/>\r\n            <a href=\"https://github.com/Learus/react-material-ui-carousel.git\" style={{textDecoration: \"none\", color: \"cornflowerblue\"}}>GitHub Repo</a>\r\n        </p>\r\n        \r\n        <Example/>\r\n        <SecondExample/>\r\n    </div>\r\n);\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}