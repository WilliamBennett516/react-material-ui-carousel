{"version":3,"sources":["components/Example.js","components/SecondExample.js","components/App.js","serviceWorker.js","index.js"],"names":["Banner","props","newProp","console","log","contentPosition","totalItems","length","mediaLength","items","content","Grid","item","xs","key","CardContent","className","Typography","Name","Caption","Button","variant","i","Items","media","CardMedia","image","Image","title","push","unshift","splice","Card","raised","container","spacing","BannerExample","state","autoPlay","timer","animation","indicators","timeout","navButtonsAlwaysVisible","navButtonsAlwaysInvisible","autoBind","this","setState","event","target","value","style","marginTop","color","map","index","FormLabel","component","FormControlLabel","control","Checkbox","onChange","toggleAutoPlay","checked","label","toggleIndicators","toggleNavButtonsAlwaysVisible","toggleNavButtonsAlwaysInvisible","RadioGroup","name","changeAnimation","row","marginLeft","Radio","width","id","gutterBottom","Slider","defaultValue","getAriaValueText","aria-labelledby","valueLabelDisplay","step","marks","min","max","changeTimeout","React","Component","Project","Paper","backgroundColor","elevation","description","MyProjectsExample","App","padding","marginBottom","href","textDecoration","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5f3d721a.chunk.js","sourcesContent":["import React from 'react';\r\nimport Carousel from \"react-material-ui-carousel\"\r\nimport autoBind from \"auto-bind\"\r\nimport '../style//Example.scss';\r\n\r\nimport {\r\n    Card,\r\n    CardContent,\r\n    CardMedia,\r\n    Typography,\r\n    Grid,\r\n    Button,\r\n    Checkbox,\r\n    FormControlLabel,\r\n    Radio,\r\n    RadioGroup,\r\n    FormLabel,\r\n    Slider\r\n} from '@material-ui/core';\r\n\r\nfunction Banner(props) {\r\n    if (props.newProp) console.log(props.newProp)\r\n    const contentPosition = props.contentPosition ? props.contentPosition : \"left\"\r\n    const totalItems = props.length ? props.length : 3;\r\n    const mediaLength = totalItems - 1;\r\n\r\n    let items = [];\r\n    const content = (\r\n        <Grid item xs={12 / totalItems} key=\"content\">\r\n            <CardContent className=\"Content\">\r\n                <Typography className=\"Title\">\r\n                    {props.item.Name}\r\n                </Typography>\r\n\r\n                <Typography className=\"Caption\">\r\n                    {props.item.Caption}\r\n                </Typography>\r\n\r\n                <Button variant=\"outlined\" className=\"ViewButton\">\r\n                    View Now\r\n                </Button>\r\n            </CardContent>\r\n        </Grid>\r\n    )\r\n\r\n\r\n    for (let i = 0; i < mediaLength; i++) {\r\n        const item = props.item.Items[i];\r\n\r\n        const media = (\r\n            <Grid item xs={12 / totalItems} key={item.Name}>\r\n                <CardMedia\r\n                    className=\"Media\"\r\n                    image={item.Image}\r\n                    title={item.Name}\r\n                >\r\n                    <Typography className=\"MediaCaption\">\r\n                        {item.Name}\r\n                    </Typography>\r\n                </CardMedia>\r\n\r\n            </Grid>\r\n        )\r\n\r\n        items.push(media);\r\n    }\r\n\r\n    if (contentPosition === \"left\") {\r\n        items.unshift(content);\r\n    } else if (contentPosition === \"right\") {\r\n        items.push(content);\r\n    } else if (contentPosition === \"middle\") {\r\n        items.splice(items.length / 2, 0, content);\r\n    }\r\n\r\n    return (\r\n        <Card raised className=\"Banner\">\r\n            <Grid container spacing={0} className=\"BannerGrid\">\r\n                {items}\r\n            </Grid>\r\n        </Card>\r\n    )\r\n}\r\n\r\nconst items = [\r\n    {\r\n        Name: \"Electronics\",\r\n        Caption: \"Electrify your friends!\",\r\n        contentPosition: \"left\",\r\n        Items: [\r\n            {\r\n                Name: \"Macbook Pro\",\r\n                Image: \"https://source.unsplash.com/featured/?macbook\"\r\n            },\r\n            {\r\n                Name: \"iPhone\",\r\n                Image: \"https://source.unsplash.com/featured/?iphone\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        Name: \"Home Appliances\",\r\n        Caption: \"Say no to manual home labour!\",\r\n        contentPosition: \"middle\",\r\n        Items: [\r\n            {\r\n                Name: \"Washing Machine WX9102\",\r\n                Image: \"https://source.unsplash.com/featured/?washingmachine\"\r\n            },\r\n            {\r\n                Name: \"Learus Vacuum Cleaner\",\r\n                Image: \"https://source.unsplash.com/featured/?vacuum,cleaner\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        Name: \"Decoratives\",\r\n        Caption: \"Give style and color to your living room!\",\r\n        contentPosition: \"right\",\r\n        Items: [\r\n            {\r\n                Name: \"Living Room Lamp\",\r\n                Image: \"https://source.unsplash.com/featured/?lamp\"\r\n            },\r\n            {\r\n                Name: \"Floral Vase\",\r\n                Image: \"https://source.unsplash.com/featured/?vase\"\r\n            }\r\n        ]\r\n    }\r\n]\r\n\r\nclass BannerExample extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            autoPlay: true,\r\n            timer: 500,\r\n            animation: \"fade\",\r\n            indicators: true,\r\n            timeout: 500,\r\n            navButtonsAlwaysVisible: false,\r\n            navButtonsAlwaysInvisible: false\r\n        }\r\n\r\n        autoBind(this);\r\n    }\r\n\r\n    toggleAutoPlay() {\r\n        this.setState({\r\n            autoPlay: !this.state.autoPlay\r\n        })\r\n    }\r\n\r\n    toggleIndicators() {\r\n        this.setState({\r\n            indicators: !this.state.indicators\r\n        })\r\n    }\r\n\r\n    toggleNavButtonsAlwaysVisible()\r\n    {\r\n        this.setState({\r\n            navButtonsAlwaysVisible: !this.state.navButtonsAlwaysVisible\r\n        })\r\n    }\r\n\r\n    toggleNavButtonsAlwaysInvisible()\r\n    {\r\n        this.setState({\r\n            navButtonsAlwaysInvisible: !this.state.navButtonsAlwaysInvisible\r\n        })\r\n    }\r\n\r\n    changeAnimation(event) {\r\n        this.setState({\r\n            animation: event.target.value\r\n        })\r\n    }\r\n\r\n    changeTimeout(event, value) {\r\n        this.setState({\r\n            timeout: value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{marginTop: \"50px\", color: \"#494949\"}}>\r\n                <h2>Example: eBay&trade; style</h2>\r\n\r\n                <Carousel\r\n                    className=\"Example\"\r\n                    autoPlay={this.state.autoPlay}\r\n                    timer={this.state.timer}\r\n                    animation={this.state.animation}\r\n                    indicators={this.state.indicators}\r\n                    timeout={this.state.timeout}\r\n                    navButtonsAlwaysVisible={this.state.navButtonsAlwaysVisible}\r\n                    navButtonsAlwaysInvisible={this.state.navButtonsAlwaysInvisible}\r\n                >\r\n                    {\r\n                        items.map((item, index) => {\r\n                            return <Banner item={item} key={index} contentPosition={item.contentPosition}/>\r\n                        })\r\n                    }\r\n                </Carousel>\r\n\r\n\r\n                <FormLabel component=\"legend\">Options</FormLabel>\r\n                <FormControlLabel\r\n                    control={\r\n                        <Checkbox onChange={this.toggleAutoPlay} checked={this.state.autoPlay} value=\"autoplay\"\r\n                                  color=\"primary\"/>\r\n                    }\r\n                    label=\"Auto-play\"\r\n                />\r\n                <FormControlLabel\r\n                    control={\r\n                        <Checkbox onChange={this.toggleIndicators} checked={this.state.indicators} value=\"indicators\"\r\n                                  color=\"primary\"/>\r\n                    }\r\n                    label=\"Indicators\"\r\n                />\r\n                <FormControlLabel\r\n                    control={\r\n                        <Checkbox onChange={this.toggleNavButtonsAlwaysVisible} checked={this.state.navButtonsAlwaysVisible} value=\"indicators\" color=\"primary\"/>\r\n                    }\r\n                    label=\"NavButtonsAlwaysVisible\"\r\n                />\r\n\r\n                <FormControlLabel\r\n                    control={\r\n                        <Checkbox onChange={this.toggleNavButtonsAlwaysInvisible} checked={this.state.toggleNavButtonsAlwaysInvisible} value=\"indicators\" color=\"primary\"/>\r\n                    }\r\n                    label=\"NavButtonsAlwaysInvisible\"\r\n                />\r\n\r\n                <FormControlLabel\r\n                    control={\r\n                        <RadioGroup name=\"animation\" value={this.state.animation} onChange={this.changeAnimation} row\r\n                                    style={{marginLeft: \"10px\"}}>\r\n                            <FormControlLabel value=\"fade\" control={<Radio color=\"primary\"/>} label=\"Fade\"/>\r\n                            <FormControlLabel value=\"slide\" control={<Radio color=\"primary\"/>} label=\"Slide\"/>\r\n                        </RadioGroup>\r\n                    }\r\n                />\r\n\r\n                <FormControlLabel\r\n                    control={\r\n                        <div style={{width: 300}}>\r\n                            <Typography id=\"discrete-slider\" gutterBottom>\r\n                                Animation Duration (Timeout) in ms\r\n                            </Typography>\r\n                            <Slider\r\n                                defaultValue={500}\r\n                                getAriaValueText={() => `${this.state.timeout}ms`}\r\n                                aria-labelledby=\"discrete-slider\"\r\n                                valueLabelDisplay=\"auto\"\r\n                                step={100}\r\n                                marks\r\n                                min={100}\r\n                                max={2000}\r\n                                onChange={this.changeTimeout}\r\n                            />\r\n                        </div>\r\n                    }\r\n                />\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default BannerExample;\r\n","import React from 'react';\r\nimport Carousel from 'react-material-ui-carousel';\r\nimport autoBind from 'auto-bind';\r\nimport {\r\n    FormLabel,\r\n    FormControlLabel,\r\n    Checkbox,\r\n    Radio,\r\n    RadioGroup,\r\n    Paper,\r\n    Button,\r\n    Slider,\r\n    Typography\r\n} from '@material-ui/core'\r\n\r\nimport \"../style/SecondExample.scss\"\r\n\r\nfunction Project(props)\r\n{\r\n    return (\r\n        <Paper \r\n            className=\"Project\"\r\n            style={{\r\n                backgroundColor: props.item.color, \r\n            }}\r\n            elevation={10}\r\n        >\r\n            <h2>{props.item.name}</h2>\r\n            <p>{props.item.description}</p>\r\n\r\n            <Button className=\"CheckButton\">\r\n                Check it out!\r\n            </Button>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nconst items = [\r\n    {\r\n        name: \"Lear Music Reader\",\r\n        description: \"A PDF Reader specially designed for musicians.\",\r\n        color: \"#64ACC8\"\r\n    },\r\n    {\r\n        name: \"Hash Code 2019\",\r\n        description: \"My Solution on the 2019 Hash Code by Google Slideshow problem.\",\r\n        color: \"#7D85B1\"\r\n    },\r\n    {\r\n        name: \"Terrio\",\r\n        description: \"A exciting mobile game game made in the Unity Engine.\",\r\n        color: \"#CE7E78\"\r\n    },\r\n    {\r\n        name: \"React Carousel\",\r\n        description: \"A Generic carousel UI component for React using material ui.\",\r\n        color: \"#C9A27E\"\r\n    }\r\n]\r\n\r\nexport default class MyProjectsExample extends React.Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n\r\n        this.state = {\r\n            autoPlay: true,\r\n            timer: 500,\r\n            animation: \"fade\",\r\n            indicators: true,\r\n            timeout: 500,\r\n            navButtonsAlwaysVisible: false,\r\n            navButtonsAlwaysInvisible: false\r\n        }\r\n\r\n        autoBind(this);\r\n    }\r\n\r\n    toggleAutoPlay()\r\n    {\r\n        this.setState({\r\n            autoPlay: !this.state.autoPlay\r\n        })\r\n    }\r\n\r\n    toggleIndicators()\r\n    {\r\n        this.setState({\r\n            indicators: !this.state.indicators\r\n        })\r\n    }\r\n\r\n    toggleNavButtonsAlwaysVisible()\r\n    {\r\n        this.setState({\r\n            navButtonsAlwaysVisible: !this.state.navButtonsAlwaysVisible\r\n        })\r\n    }\r\n\r\n    toggleNavButtonsAlwaysInvisible()\r\n    {\r\n        this.setState({\r\n            navButtonsAlwaysInvisible: !this.state.navButtonsAlwaysInvisible\r\n        })\r\n    }\r\n\r\n    changeAnimation(event)\r\n    {\r\n        this.setState({\r\n            animation: event.target.value\r\n        })\r\n    }\r\n\r\n    changeTimeout(event, value)\r\n    {\r\n        this.setState({\r\n            timeout: value\r\n        })\r\n    }\r\n\r\n    render()\r\n    {\r\n        return (\r\n            <div style={{marginTop: \"50px\", color: \"#494949\"}}>\r\n                <h2>Example: Learus Projects (random)</h2>\r\n\r\n                <Carousel \r\n                    className=\"SecondExample\"\r\n                    autoPlay={this.state.autoPlay}\r\n                    timer={this.state.timer}\r\n                    animation={this.state.animation}\r\n                    indicators={this.state.indicators}\r\n                    timeout={this.state.timeout}\r\n                    navButtonsAlwaysVisible={this.state.navButtonsAlwaysVisible}\r\n                    navButtonsAlwaysInvisible={this.state.navButtonsAlwaysInvisible}\r\n                    \r\n                >\r\n                    {\r\n                        items.map( (item, index) => {\r\n                            return <Project item={item} key={index}/>\r\n                        })\r\n                    }\r\n                </Carousel>\r\n\r\n\r\n                <FormLabel component=\"legend\">Options</FormLabel>\r\n                <FormControlLabel\r\n                    control={\r\n                        <Checkbox onChange={this.toggleAutoPlay} checked={this.state.autoPlay} value=\"autoplay\" color=\"primary\"/>\r\n                    }\r\n                    label=\"Auto-play\"\r\n                />\r\n                <FormControlLabel\r\n                    control={\r\n                        <Checkbox onChange={this.toggleIndicators} checked={this.state.indicators} value=\"indicators\" color=\"primary\"/>\r\n                    }\r\n                    label=\"Indicators\"\r\n                />\r\n                <FormControlLabel\r\n                    control={\r\n                        <Checkbox onChange={this.toggleNavButtonsAlwaysVisible} checked={this.state.navButtonsAlwaysVisible} value=\"indicators\" color=\"primary\"/>\r\n                    }\r\n                    label=\"NavButtonsAlwaysVisible\"\r\n                />\r\n\r\n                <FormControlLabel\r\n                    control={\r\n                        <Checkbox onChange={this.toggleNavButtonsAlwaysInvisible} checked={this.state.navButtonsAlwaysInvisible} value=\"indicators\" color=\"primary\"/>\r\n                    }\r\n                    label=\"NavButtonsAlwaysInvisible\"\r\n                />\r\n\r\n                \r\n                <FormControlLabel\r\n                    control={\r\n                        <RadioGroup name=\"animation\" value={this.state.animation} onChange={this.changeAnimation} row style={{marginLeft: \"10px\"}}>\r\n                            <FormControlLabel value=\"fade\" control={<Radio color=\"primary\"/>} label=\"Fade\"/>\r\n                            <FormControlLabel value=\"slide\" control={<Radio color=\"primary\"/>} label=\"Slide\"/>\r\n                        </RadioGroup>\r\n                    }\r\n                />\r\n\r\n                <FormControlLabel\r\n                    control={\r\n                        <div style={{width: 300}}>\r\n                            <Typography id=\"discrete-slider\" gutterBottom>\r\n                                Animation Duration (Timeout) in ms\r\n                            </Typography>\r\n                            <Slider\r\n                                defaultValue={500}\r\n                                getAriaValueText={() => `${this.state.timeout}ms`}\r\n                                aria-labelledby=\"discrete-slider\"\r\n                                valueLabelDisplay=\"auto\"\r\n                                step={100}\r\n                                marks\r\n                                min={100}\r\n                                max={2000}\r\n                                onChange={this.changeTimeout}\r\n                            />\r\n                        </div>\r\n                    }\r\n                />\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport Example from './Example'\r\nimport SecondExample from './SecondExample'\r\n\r\nconst App = () => (\r\n    <div style={{padding: \"40px 100px\", backgroundColor: \"#ebebeb\"}}>\r\n        <h1 style={{color: \"#494949\"}}>React Material UI Carousel Demo</h1>\r\n        <p style={{marginBottom: \"30px\"}}>\r\n            by <a href=\"http://learus.github.io\" style={{textDecoration: \"none\", color: \"cornflowerblue\"}}>Learus</a><br/>\r\n            <a href=\"https://github.com/Learus/react-material-ui-carousel.git\" style={{textDecoration: \"none\", color: \"cornflowerblue\"}}>GitHub Repo</a>\r\n        </p>\r\n        \r\n        <Example/>\r\n        <SecondExample/>\r\n    </div>\r\n);\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}